Thread 2: B starting
Thread 1: A starting
Thread 2: UnsafeBuffer.put: Starting
Thread 2: UnsafeBuffer.put: Checking !full
Thread 2: UnsafeBuffer.put: Checking object != null
Thread 2: UnsafeBuffer.put: Begin critical section.
Thread 2: UnsafeBuffer.put: Set contents[0] = Wilma
Thread 1: UnsafeBuffer.put: Starting
Thread 1: UnsafeBuffer.put: Checking !full
Thread 1: UnsafeBuffer.put: Checking object != null
Thread 1: UnsafeBuffer.put: Begin critical section.
Thread 1: UnsafeBuffer.put: Set contents[0] = Fred
Thread 1: UnsafeBuffer.put: Set newLast = 1
Thread 1: UnsafeBuffer.put: Setting last = 1
Thread 1: UnsafeBuffer.put: Set newSize = 1
Thread 1: UnsafeBuffer.put: Setting size = 1
Thread 1: UnsafeBuffer.put: End critical section.
Thread 2: UnsafeBuffer.put: Set newLast = 0
Thread 2: UnsafeBuffer.put: Setting last = 0
Thread 2: UnsafeBuffer.put: Set newSize = 2
Thread 2: UnsafeBuffer.put: Setting size = 2
Thread 2: UnsafeBuffer.put: End critical section.
Thread 2: UnsafeBuffer.checkInvariants (): State = UnsafeBuffer { capacity=2, size=2, first=0, last=0, contents[0]=Fred, contents[1]=null }
Thread 1: UnsafeBuffer.checkInvariants (): State = UnsafeBuffer { capacity=2, size=2, first=0, last=0, contents[0]=Fred, contents[1]=null }
Thread 1: FAILED ASSERTION
Thread 1: UnsafeBuffer.put: Returning
Thread 1: UnsafeBuffer.get: Starting
Thread 1: UnsafeBuffer.get: Checking !empty
Thread 1: UnsafeBuffer.get: Begin critical section.
Thread 1: UnsafeBuffer.get: Set result = Fred
Thread 1: UnsafeBuffer.get: Set contents[0] = null
Thread 1: UnsafeBuffer.get: Set newFirst = 1
Thread 1: UnsafeBuffer.get: Set first = 1
Thread 1: UnsafeBuffer.get: Set newSize = 1
Thread 1: UnsafeBuffer.get: Set size = 1
Thread 1: UnsafeBuffer.get: End critical section
Thread 1: UnsafeBuffer.checkInvariants (): State = UnsafeBuffer { capacity=2, size=1, first=1, last=0, contents[0]=null, contents[1]=null }
Thread 1: FAILED ASSERTION
Thread 2: FAILED ASSERTION
Thread 2: UnsafeBuffer.put: Returning
Thread 2: UnsafeBuffer.get: Starting
Thread 2: UnsafeBuffer.get: Checking !empty
Thread 2: UnsafeBuffer.get: Begin critical section.
Thread 2: UnsafeBuffer.get: Set result = null
Thread 2: UnsafeBuffer.get: Set contents[1] = null
Thread 2: UnsafeBuffer.get: Set newFirst = 0
Thread 2: UnsafeBuffer.get: Set first = 0
Thread 2: UnsafeBuffer.get: Set newSize = 0
Thread 2: UnsafeBuffer.get: Set size = 0
Thread 2: UnsafeBuffer.get: End critical section
Thread 2: UnsafeBuffer.checkInvariants (): State = UnsafeBuffer { capacity=2, size=0, first=0, last=0, contents[0]=null, contents[1]=null }
Thread 2: UnsafeBuffer.get: Returning null
Thread 2: FAILED ASSERTION
Thread 1: UnsafeBuffer.get: Returning Fred
